{"version":3,"sources":["components/organisms/SharingOrg/SharingOrg.module.scss","components/organisms/ReconstructionOrg/ReconstructionOrg.module.scss","components/atoms/CustomInput/CustomInput.module.scss","components/molecules/SharingTable/SharingTable.module.scss","components/pages/Home/Home.module.scss","components/layouts/Layout/Layout.module.scss","components/molecules/ErrorGate/ErrorGate.module.scss","assets/logo.svg","components/atoms/CustomButton/CustomButton.module.scss","assets/Nfc-icon-vector-01.svg","components/molecules/SharesTable/SharesTable.module.scss","assets/home.svg","assets/sharing.svg","assets/reconstruction.svg","components/organisms/NFCGate/NFCGate.module.scss","components/molecules/ErrorGate/ErrorGate.component.tsx","components/layouts/Layout/Layout.component.tsx","components/atoms/CustomInput/CustomInput.components.tsx","components/atoms/CustomButton/CustomButton.component.tsx","store/sharing/sharing.types.ts","store/sharing/sharing.actions.ts","components/molecules/MessageForm/MessageForm.component.tsx","components/molecules/SharingTable/SharingTable.component.tsx","components/organisms/SharingOrg/SharingOrg.component.tsx","logics/SSSS/utils.ts","logics/convertor.ts","logics/SSSS/reconstruction.ts","logics/SSSS/config.ts","components/molecules/SharesTable/SharesTable.component.tsx","components/organisms/ReconstructionOrg/ReconstructionOrg.component.tsx","store/reconstruction/reconstruction.types.ts","store/reconstruction/reconstruction.actions.ts","components/pages/index.ts","components/pages/Home/Home.component.tsx","components/pages/Sharing/Sharing.component.tsx","components/pages/Reconstruction/Reconstruction.component.tsx","store/nfc/nfc.reducer.ts","store/config/config.reducer.ts","store/sharing/sharing.reducer.ts","store/reconstruction/reconstruction.reducer.ts","store/rootReducer.ts","store/config/config.types.ts","store/config/config.actions.ts","store/nfc/nfc.types.ts","store/nfc/nfc.actions.ts","store/nfc/nfc.sagas.ts","logics/SSSS/sharing.ts","store/sharing/sharing.sagas.ts","store/reconstruction/reconstruction.sagas.ts","store/rootSaga.ts","store/index.ts","components/organisms/NFCGate/NFCGate.component.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ErrorGate","children","error","useSelector","state","config","useEffect","Date","getTime","date","targetNode","document","querySelector","textContent","errorMain","createElement","errorTitle","classList","add","innerHTML","errorBody","message","appendChild","id","className","styles","Layout","pageTitle","layout","body","title","footer","pages","map","page","key","name","to","path","src","iconUrl","alt","CustomInputText","label","setValue","otherProps","handleChange","e","preventDefault","target","value","form","type","onChange","CustomInputNumber","min","max","handleIncrement","useCallback","navigator","vibrate","handleDecrement","inputNum","onClick","disabled","numValue","CustomButton","customButton","SharingActionTypes","initSharingState","MessageForm","dispatch","useDispatch","useState","setMessage","threshhold","setThreshhold","num","setNum","handleSharingStart","messageForm","payload","startSharing","t","n","maxLength","style","textAlign","SharingCount","sharing","sharesNum","count","targets","querySelectorAll","forEach","i","setAttribute","cardCSS","cardTable","Array","_","card","hidden","SharingTable","sharingTable","info","SharingOrg","step","sharingStep","SharingCompleted","sharingComp","cards","nfc","waves","wave","nfcLogo","elInverse","el","q","modExp","a","b","result","x","leastSignificantBit","Math","floor","strToShare","str","list","split","sharingId","Number","y","Error","encodeToNumArr","u8Array","window","TextEncoder","util","encode","from","decodeFromNumArr","numArr","Uint8Array","TextDecoder","decode","reconstruction","shares","length","sharesList","share","shareY","corr","push","msgNumArr","res","s","seekIntercept","SharesTable","sharesTable","ReconstructionOrg","SSSSReconstruction","slice","messageBody","ReconstructionActionTypes","setShares","component","img","logo","href","warning","homeIcon","sharingIcon","isReady","reconstructionIcon","initialState","enabled","fetchedMessage","reader","writer","rootReducer","combineReducers","action","NDEFReader","NDEFWriter","ConfigActionTypes","setError","NFCActionTypes","setFetchedMessage","writingNDEF","readingNFC","appendFetchedMessageToShares","onReadingNFC","onChangeFetchedMessage","writeNDEF","write","readNFC","onerror","console","log","onreading","event","records","record","recordType","data","scan","select","call","store","put","text","takeLatest","all","msgEncoded","String","now","msg","f","random","getRandomIntList","j","shareX","val","k","pow","sendShares","onSharingStart","counter","shareMsg","Promise","resolve","setTimeout","SSSSSharing","appendingShareFromText","onAppendShare","find","newShares","rootSaga","sharingSagas","nfcSagas","reconstructionSagas","sagaMiddleware","createSagaMiddleware","middlewares","createStore","applyMiddleware","run","NFCGate","NFCDenied","denied","App","exact","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,YAAc,gCAAgC,MAAQ,0BAA0B,KAAO,yBAAyB,MAAQ,0BAA0B,KAAO,yBAAyB,iBAAiB,mCAAmC,iBAAiB,mCAAmC,iBAAiB,mCAAmC,IAAM,wBAAwB,MAAQ,0BAA0B,KAAO,yBAAyB,QAAU,8B,mBCA1cD,EAAOC,QAAU,CAAC,UAAY,qCAAqC,KAAO,gCAAgC,eAAe,wCAAwC,EAAI,6BAA6B,MAAQ,iCAAiC,KAAO,gCAAgC,YAAc,uCAAuC,WAAW,oCAAoC,QAAU,mCAAmC,YAAY,qCAAqC,KAAO,kC,iBCA3dD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,SAAW,8BAA8B,SAAW,gC,kBCA1ID,EAAOC,QAAU,CAAC,aAAe,mCAAmC,QAAU,8BAA8B,mBAAmB,uCAAuC,UAAY,gCAAgC,KAAO,2BAA2B,OAAS,6BAA6B,gBAAgB,oCAAoC,KAAO,2BAA2B,UAAU,gC,oBCA1XD,EAAOC,QAAU,CAAC,IAAM,kBAAkB,KAAO,mBAAmB,QAAU,wB,mBCA9ED,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,MAAQ,sBAAsB,OAAS,yB,6BCArHD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,UAAU,6B,iBCDrED,EAAOC,QAAU,IAA0B,kC,gBCC3CD,EAAOC,QAAU,CAAC,aAAe,qC,gBCDjCD,EAAOC,QAAU,IAA0B,gD,gBCC3CD,EAAOC,QAAU,CAAC,YAAc,mC,gBCDhCD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCC3CD,EAAOC,QAAU,CAAC,OAAS,0B,4MCKdC,EAAsB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC9BC,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOH,SAsBlD,OApBAI,qBAAU,WACR,GAAKJ,MACD,IAAIK,MAAOC,UAAYN,EAAMO,KAAKD,UAAY,KAAlD,CACA,IAAME,EAAaC,SAASC,cAAc,UAC1C,GAAKF,EAAL,CACAA,EAAWG,YAAc,KAEzB,IAAMC,EAAYH,SAASI,cAAc,OACnCC,EAAaL,SAASI,cAAc,OAC1CC,EAAWC,UAAUC,IAAI,gBACzBF,EAAWG,UAAY,QACvB,IAAMC,EAAYT,SAASI,cAAc,OACzCK,EAAUH,UAAUC,IAAI,eACxBE,EAAUD,UAAYjB,EAAMmB,QAE5BP,EAAUQ,YAAYN,GACtBF,EAAUQ,YAAYF,GACtBV,EAAWY,YAAYR,OACtB,CAACZ,IAGF,oCACE,yBAAKqB,GAAG,QAAQC,UAAWC,IAAOX,YACjCb,ICjBMyB,EAA2B,SAAC,GAA6B,IAA3BzB,EAA0B,EAA1BA,SAAU0B,EAAgB,EAAhBA,UACnD,OACE,yBAAKH,UAAWC,IAAOG,QACrB,kBAAC,EAAD,KACE,yBAAKJ,UAAWC,IAAOI,MACpBF,GAAa,yBAAKH,UAAWC,IAAOK,OAAQH,GAC5C1B,GAEH,yBAAKuB,UAAWC,IAAOM,QACpBC,GAAMC,KAAI,SAACC,GAAD,OACT,kBAAC,IAAD,CAAMC,IAAG,eAAUD,EAAKE,MAAQC,GAAIH,EAAKI,MACvC,yBAAKC,IAAKL,EAAKM,QAASC,IAAKP,EAAKE,OAClC,8BAAOF,EAAKE,c,mECPbM,EAA6C,SAAC,GAIpD,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,SACGC,EACC,oCACEC,EAAe,SAACC,GACpBA,EAAEC,iBAEFJ,EAASG,EAAEE,OAAOC,QAGpB,OACE,yBAAK1B,UAAWC,IAAO0B,MACpBR,EACC,+BACE,0BAAMnB,UAAWC,IAAOkB,OAAQA,GAChC,yCAAOS,KAAK,OAAOC,SAAUP,GAAkBD,KAGjD,yCAAOO,KAAK,OAAOC,SAAUP,GAAkBD,MAM1CS,EAAiD,SAAC,GAOxD,IANLX,EAMI,EANJA,MACAO,EAKI,EALJA,MACAN,EAII,EAJJA,SACAW,EAGI,EAHJA,IACAC,EAEI,EAFJA,IAGMC,GADF,wDACoBC,uBAAY,WAC9BR,EAAQM,IACVG,UAAUC,QAAQ,IAClBhB,EAASM,EAAQ,MAElB,CAACA,EAAOM,EAAKZ,KACViB,EAAkBH,uBAAY,WAC9BR,EAAQK,IACVI,UAAUC,QAAQ,IAClBhB,EAASM,EAAQ,MAElB,CAACA,EAAOK,EAAKX,IAEhB,OACE,yBAAKpB,UAAWC,IAAO0B,MACpBR,EACC,oCACE,0BAAMnB,UAAWC,IAAOkB,OAAQA,GAChC,yBAAKnB,UAAWC,IAAOqC,UACrB,4BAAQC,QAASF,EAAiBG,SAAUd,GAASK,GAArD,KAGA,0BAAM/B,UAAWC,IAAOwC,UAAWf,GACnC,4BAAQa,QAASN,EAAiBO,SAAUd,GAASM,GAArD,OAMJ,yBAAKhC,UAAWC,IAAOqC,UACrB,4BAAQC,QAASF,GAAjB,KACA,0BAAMrC,UAAWC,IAAOwC,UAAWf,GACnC,4BAAQa,QAASN,GAAjB,Q,iBC3EGS,EAAuC,SAAC,GAI9C,IAHLjE,EAGI,EAHJA,SACA8D,EAEI,EAFJA,QACGlB,EACC,sCACJ,OACE,oCACE,0CACErB,UAAWC,IAAO0C,aAClBJ,QAASA,GACLlB,GAEH5C,KCtBImE,EACS,6BADTA,EAEE,sBAFFA,EAGQ,4BAHRA,EAII,wBAJJA,EAKE,sBCAFC,EAAmB,iBAAO,CACrCjB,KAAMgB,ICQKE,EAAwB,WACnC,IAAMC,EAAWC,cADwB,EAEXC,mBAAS,IAFE,mBAElCpD,EAFkC,KAEzBqD,EAFyB,OAGLD,mBAAS,GAHJ,mBAGlCE,EAHkC,KAGtBC,EAHsB,OAInBH,mBAAS,GAJU,mBAIlCI,EAJkC,KAI7BC,EAJ6B,KAMnCC,EAAqBrB,uBAAY,WAMrCa,EDRwB,SAACS,GAAD,MAA+B,CACzD5B,KAAMgB,EACNa,QAAS,CAAED,gBCMAE,CALyB,CAChC7D,UACA8D,EAAGR,EACHS,EAAGP,OAGJ,CAACN,EAAUlD,EAASsD,EAAYE,IAEnC,OACE,6BACE,kBAAC,EAAD,CACElC,MAAM,UACNO,MAAO7B,EACPuB,SAAU8B,EACVW,UAAW,KAEb,kBAAC,EAAD,CACE1C,MAAM,YACNO,MAAOyB,EACP/B,SAAUgC,EACVrB,IAAK,EACLC,IAAKqB,IAEP,kBAAC,EAAD,CACElC,MAAM,mBACNO,MAAO2B,EACPjC,SAAUkC,EACVvB,IAAKoB,EACLnB,IAAK,IAEP,yBAAK8B,MAAO,CAAEC,UAAW,WACvB,kBAAC,EAAD,CAAcxB,QAASgB,EAAoBf,UAAW3C,GAAtD,c,yBCxCFmE,EAAyB,WAAO,IAAD,EACNrF,aAAY,SAACC,GAAD,OAAWA,EAAMqF,WAAlDC,EAD2B,EAC3BA,UAAWC,EADgB,EAChBA,MAWnB,OATArF,qBAAU,WACR,IAAMsF,EAAUjF,SAASkF,iBAAiB,SACtCD,GACFA,EAAQE,SAAQ,SAACX,EAAGY,GAClBZ,EAAEa,aAAa,QAbP,SAACD,EAAWlB,GAC1B,MAAM,2CAAN,OACG,IAAa,EAAIkB,EAAVlB,EAAc,GAAMA,EAD9B,SAY8BoB,CAAQF,EAAGJ,SAGtC,CAACA,IAGF,oCACE,yBAAKnE,UAAWC,IAAOyE,WACpB,YAAIC,MAAMT,IAAYzD,KAAI,SAACmE,EAAGL,GAAJ,OACzB,yBACE5D,IAAG,eAAU4D,GACbxE,GAAG,OACHC,UAAS,UAAKC,IAAO4E,KAAZ,YAAoBN,EAAI,EAAIJ,EAAQlE,IAAO6E,OAAS,YAQ5DC,EAAyB,WAAO,IACnClF,EAAYlB,aAAY,SAACC,GAAD,OAAWA,EAAMqF,WAAzCpE,QAER,OACE,oCACE,yBAAKG,UAAWC,IAAO+E,cACrB,yBAAKhF,UAAWC,IAAOJ,SAAUA,GACjC,kBAAC,EAAD,OAEF,yBAAKG,UAAWC,IAAOgF,MAAvB,a,iCCtCOC,EAAuB,WAClC,IAAMC,EAAOxG,aAAY,SAACC,GAAD,OAAWA,EAAMqF,QAAQmB,eAClD,OACE,oCACY,UAATD,GAAoB,kBAAC,EAAD,MACX,YAATA,GAAsB,kBAAC,EAAD,MACb,YAATA,GAAsB,kBAAC,EAAD,QAKvBE,EAA6B,WACjC,OACE,yBAAKrF,UAAWC,IAAOqF,aACrB,yBAAKtF,UAAWC,IAAOK,OAAvB,gBACA,yBAAKN,UAAWC,IAAOI,MACrB,yBAAKL,UAAWC,IAAOsF,OACrB,yBAAKvF,UAAWC,IAAO4E,OACvB,yBAAK7E,UAAWC,IAAO4E,OACvB,yBAAK7E,UAAWC,IAAO4E,QAEzB,yBAAK7E,UAAWC,IAAOuF,KACrB,yBAAKxF,UAAWC,IAAOwF,OACrB,0BAAMzF,UAAWC,IAAOyF,OACxB,0BAAM1F,UAAWC,IAAOyF,OACxB,0BAAM1F,UAAWC,IAAOyF,QAE1B,yBAAK1F,UAAWC,IAAO0F,SACrB,yBAAK5E,IAAK4E,IAAS1E,IAAI,a,QC5BtB2E,EAAY,SAACC,EAAYC,GACpC,OAAW,IAAPD,EAAiB,EACdE,EAAOF,EAAIC,EAAI,EAAGA,IAqBrBC,EAAS,SAACC,EAAWC,EAAWrC,GAKpC,IAHA,IAAIsC,EAAS,EACTC,EAFJH,GAAQpC,EAIDqC,EAAI,GAAG,CACZ,IAAMG,EAAsBH,EAAI,EAChCA,EAAII,KAAKC,MAAML,EAAI,GAES,IAAxBG,IACFF,GAAkBC,EAClBD,GAAkBtC,GAGpBuC,GAAQA,EACRA,GAAQvC,EAEV,OAAOsC,G,QCzCIK,EAAa,SAACC,GACzB,IAAMC,EAAOD,EAAIE,MAAM,MAEvB,IAOE,MANqB,CACnBC,UAAWF,EAAK,GAChB9C,EAAGiD,OAAOH,EAAK,IACfN,EAAGS,OAAOH,EAAK,IACfI,EAAGJ,EAAK,IAGV,SACA,MAAM,IAAIK,MAAM,sGAIPC,EAAiB,SAACP,GAC7B,IAMMQ,GALF,gBAAiBC,OACT,IAAIC,YAEJ,IAAIC,eAEQC,OAAOZ,GAG/B,OAFe7B,MAAM0C,KAAKL,IAKfM,EAAmB,SAACC,GAC/B,IAAMP,EAAU,IAAIQ,WAAWD,GAS/B,OAPI,gBAAiBN,OACT,IAAIQ,YAEJ,IAAIN,eAEOO,OAAOV,ICtCnBW,GAAiB,SAACC,GAC7B,GAAsB,IAAlBA,EAAOC,OAAc,MAAM,IAAIf,MAAM,6BACzC,GAAIc,EAAO,GAAGjE,EAAIiE,EAAOC,OACvB,MAAM,IAAIf,MAAM,mDAElB,IALyD,EAKnDgB,EAA6B,GALsB,cAMrCF,GANqC,yBAM9CG,EAN8C,QAOjChB,EAAegB,EAAMlB,GAC7BvC,SAAQ,SAAC0D,EAAQzD,GAC7B,IAAM0D,EAAmB,CACvB9B,EAAG4B,EAAM5B,EACTU,EAAGmB,GAEDzD,KAAKuD,EACPA,EAAWvD,GAAG2D,KAAKD,GAEnBH,EAAWvD,GAAK,CAAC0D,OAVvB,2BAA6B,IAN4B,8BAoBzD,IAAME,EAAYL,EAAWrH,KAAI,SAACmH,GAAD,OFbN,SAACA,EAAsB9B,GAClD,IADwE,EACpEI,EAAS,EAD2D,cAGjD0B,GAHiD,IAGxE,2BAA+B,CAAC,IAAD,YAAlBzB,EAAkB,EAAlBA,EACPiC,EADyB,EAAfvB,EAAe,cAEbe,GAFa,IAE7B,2BAAwB,CAAC,IAAdS,EAAa,QAClBlC,IAAMkC,EAAElC,IACZiC,IAASC,EAAElC,EAAIP,EAAUO,EAAIkC,EAAElC,EAAGL,GAAMA,IAJb,8BAM7BI,GAAUkC,GAT4D,8BAaxE,OAFAlC,EAASA,EAAS,EAAKA,EAASJ,EAAKA,EAAII,EAASJ,EEELwC,CAAcV,EC5B5C,QD+Bf,OAFeN,EAAiBa,I,oBEjBrBI,GAAqC,SAAC,GAAgB,IAAdX,EAAa,EAAbA,OACnD,OACE,2BAAO5H,UAAWC,KAAOuI,aACvB,+BACE,4BACE,kCACA,uCAGJ,+BACGZ,EAAOnH,KAAI,SAACsH,GAAD,OACV,wBAAIpH,IAAG,gBAAWoH,EAAM5B,IACtB,4BAAK4B,EAAM5B,GACX,4BAAK4B,EAAMlB,U,oBCfV4B,GAA8B,WACzC,IAAMb,EAASjJ,aAAY,SAACC,GAAD,OAAWA,EAAM+I,eAAeC,UADZ,EAEjB3E,mBAAwB,MAFP,mBAExCpD,EAFwC,KAE/BqD,EAF+B,KAa/C,OATApE,qBAAU,WACR,GAAsB,IAAlB8I,EAAOC,OAAX,CADc,IAGNlE,EAAMiE,EAAO,GAAbjE,EACJA,GAAKiE,EAAOC,QACd3E,EAAWwF,GAAmBd,EAAOe,MAAM,EAAGhF,QAE/C,CAACiE,IAGF,6BACE,yBAAK5H,UAAWC,KAAOyE,WACpBkD,EAAOnH,KAAI,SAACsH,GAAD,OACV,yBAAK/H,UAAWC,KAAO4E,KAAMlE,IAAG,eAAUoH,EAAM5B,IAC9C,0BAAMnG,UAAWC,KAAO4G,GAAIkB,EAAMlB,QAGpChH,GACA,yBAAKG,UAAWC,KAAOwF,OACrB,yBAAKzF,UAAWC,KAAOyF,OACvB,yBAAK1F,UAAWC,KAAOyF,OACvB,yBAAK1F,UAAWC,KAAOyF,QAG1B7F,GACC,yBAAKG,UAAWC,KAAO2I,aACrB,0BAAM5I,UAAWC,KAAOJ,SAAUA,KAIxC,6BACE,yBAAKG,UAAWC,KAAOgF,MACpBpF,EAAU,cAAgB,YACR,IAAlB+H,EAAOC,QAAP,WAA2BD,EAAOC,OAAlC,YAA4CD,EAAO,GAAGjE,EAAtD,MAEgB,IAAlBiE,EAAOC,QAAgB,kBAAC,GAAD,CAAaD,OAAQA,OCjDxCiB,GACgB,2CADhBA,GAGC,4BAHDA,GAIa,wCAJbA,GAKK,gCCSLC,GAAY,SAAClB,GAAD,MAAsB,CAC7ChG,KAAMiH,GACNpF,QAAS,CAAEmE,Y,4DCKApH,GAAoB,CAC/B,CAAEM,KAAM,IAAKF,KAAM,OAAQmI,UCZ0B,WACrD,OACE,kBAAC,EAAD,KACE,yBAAK/I,UAAWC,IAAO+I,KACrB,yBAAKjI,IAAKkI,IAAMhI,IAAI,kBAEtB,yBAAKjB,UAAWC,IAAO4E,MACrB,4CACA,yFACA,4BACE,oCACQ,IACN,uBAAGqE,KAAK,4CAAR,6CAIF,qCACS,IACP,uBAAGA,KAAK,gCAAR,mCAMN,yBAAKlJ,UAAWC,IAAO4E,MACrB,yDACA,6CAEE,uBAAGqE,KAAK,gDAAR,kBAFF,MAOA,sXAQF,yBAAKlJ,UAAWC,IAAO4E,MACrB,oCACA,2CACA,kHAIA,4BACE,uCACA,yCACA,iDAEF,uCACA,4DACiC,IAC/B,0BAAM7E,UAAWC,IAAOkJ,SAAxB,2EAKF,yCACA,gFACA,gDACA,8FDpD0CnI,QAASoI,MACzD,CACEtI,KAAM,WACNF,KAAM,UACNmI,UEhBsD,WACxD,IAAMhG,EAAWC,cAQjB,OANAlE,qBAAU,WACR,OAAO,WACLiE,EAASF,QAEV,CAACE,IAGF,kBAAC,EAAD,CAAQ5C,UAAU,WAChB,kBAAC,EAAD,QFMFa,QAASqI,MAEX,CACEvI,KAAM,kBACNF,KAAM,iBACNmI,UGnB6D,WAC/D,IAAMhG,EAAWC,cAQjB,OAPAlE,qBAAU,WAER,OADAiE,EJQgD,CAClDnB,KAAMiH,GACNpF,QAAS,CAAE6F,SIVc,KAChB,WACLvG,EJbwC,CAC5CnB,KAAMiH,QIcH,CAAC9F,IAGF,kBAAC,EAAD,CAAQ5C,UAAU,iBAChB,kBAAC,GAAD,QHSFa,QAASuI,O,kCIrBPC,GAAyB,CAC7BC,QAAS,eAAgBxC,QAAU,eAAgBA,OACnDyC,eAAgB,GAChBC,OAAQ,KACRC,OAAQ,MCPJJ,GAA4B,CAChC9K,MAAO,MCEI8K,GAA6B,CACxCpE,YAAa,QACbvF,QAAS,GACTqE,UAAW,EACXC,MAAO,GCHIqF,GAAoC,CAC/CF,SAAS,EACTzJ,QAAS,GACT+H,OAAQ,ICGGiC,GAAcC,aAAuB,CAChDtE,IJAwB,WAA+C,IAA9C5G,EAA6C,uDAArC4K,GAAcO,EAAuB,uCACtE,OAAQA,EAAOnI,MACb,IAAK,gBACH,OAAIhD,EAAM6K,UAAY7K,EAAM+K,OACnB,gBACF/K,EADL,CAEE+K,OAAQ,IAAIK,WACZJ,OAAQ,IAAIK,aAGPrL,EAEX,IAAK,0BACH,OAAO,gBACFA,EADL,CAEE8K,eAAgBK,EAAOtG,QAAQ5D,UAEnC,QACE,OAAOjB,IIjBXC,OHP2B,WAAkD,IAAjDD,EAAgD,uDAAxC4K,GAAcO,EAA0B,uCAC5E,OAAQA,EAAOnI,MACb,IAAK,mBACH,OAAO,gBACFhD,EADL,CAEEF,MAAO,CACLmB,QAASkK,EAAOtG,QAAQ/E,MACxBO,KAAM,IAAIF,QAGhB,QACE,OAAOH,IGHXqF,QFF4B,WAGV,IAFlBrF,EAEiB,uDAFT4K,GACRO,EACiB,uCACjB,OAAQA,EAAOnI,MACb,IAAK,6BACH,OAAO,gBACFhD,EADL,GAEK4K,IAEP,IAAK,sBACH,OAAO,gBACF5K,EADL,CAEEuF,MAAO4F,EAAOtG,QAAQU,QAE1B,IAAK,4BACH,OAAO,gBACFvF,EADL,CAEEuF,MAAOvF,EAAMuF,MAAQ,IAEzB,IAAK,wBACH,OAAO,gBACFvF,EADL,CAEEwG,YAAa,UACbvF,QAASkK,EAAOtG,QAAQD,YAAY3D,QACpCqE,UAAW6F,EAAOtG,QAAQD,YAAYI,IAE1C,IAAK,sBACH,OAAO,gBACFhF,EADL,CAEEwG,YAAa,YAEjB,QACE,OAAOxG,IE9BX+I,eDHmC,WAG/B,IAFJ/I,EAEG,uDAFK4K,GACRO,EACG,uCACH,OAAQA,EAAOnI,MACb,IAAK,2CACH,OAAO,gBACFhD,EADL,GAEK4K,IAEP,IAAK,6BACH,OAAO,gBACF5K,EADL,CAEEiB,QAASkK,EAAOtG,QAAQ5D,UAE5B,IAAK,4BACH,OAAO,gBACFjB,EADL,CAEEgJ,OAAQmC,EAAOtG,QAAQmE,SAE3B,IAAK,gCACH,OAAO,gBACFhJ,EADL,CAEE0K,QAASS,EAAOtG,QAAQ6F,UAE5B,QACE,OAAO1K,M,2BE9CAsL,GACA,mBCGAC,GAAW,SAACzL,GAAD,MAAgC,CACtDkD,KAAMsI,GACNzG,QAAS,CAAE/E,W,SCNA0L,GACA,gBADAA,GAEU,0BAFVA,GAGY,4BCKZC,GAAoB,SAACxK,GAAD,MAAsB,CACrD+B,KAAMwI,GACN3G,QAAS,CAAE5D,a,aCsBIyK,I,aASPC,I,aAcAC,I,aAQAC,I,aAGAC,I,0BAvDKC,G,qFAAf,WAAyB9K,EAAiB+J,GAA1C,UAAA5D,EAAA,sEACQ4D,EAAOgB,MAAM/K,GADrB,4C,+BAGegL,G,qFAAf,WAAuBlB,EAAoB5G,GAA3C,UAAAiD,EAAA,6DACE2D,EAAOmB,QAAU,SAACpM,GAEhB,MADAqM,QAAQC,IAAI,CAAEtM,UACR,IAAIoI,MAAMpI,EAAMmB,UAGxB8J,EAAOsB,UAAY,SAACC,GAAW,IAAD,gBACPA,EAAMrL,QAAQsL,SADP,IAC5B,2BAA4C,CAAC,IAAlCC,EAAiC,QAC1C,GAA0B,SAAtBA,EAAOC,WAAuB,CAChC,IACMC,GADc,IAAI7D,aACCC,OAAO0D,EAAOE,MAEvCvI,EAASsH,GAAkBiB,MANH,gCANhC,SAgBQ3B,EAAO4B,OAhBf,4C,sBAkBO,SAAUjB,GAAYzK,GAAtB,0EAGM,OAHN,SAGY2L,eAHZ,qBAEI5B,EAFJ,EAEHpE,IAAOoE,QAFJ,gBAMH,OANG,SAMG6B,aAAKd,GAAW9K,EAAS+J,GAN5B,wCASP,SAAUW,GAAWmB,GAArB,4EAGa,OAHb,SAGmBF,eAHnB,qBAEW7B,EAFX,EAEInE,IAAOmE,QAFX,iBAQM,OAFM5G,EAAa2I,EAAb3I,SANZ,kBAQY0I,aAAKZ,GAASlB,EAAQ5G,GARlC,+BAUM,OAVN,oCAUY4I,aAAIxB,GAAS,uDAVzB,uDAcA,SAAUK,GACRT,GADF,wEAIE,OADQlK,EAAYkK,EAAOtG,QAAnB5D,QAHV,SAIQ8L,adxC8C,CACpD/J,KAAMiH,GACNpF,QAAS,CAAEmI,KcsCmB/L,KAJhC,wCAQA,SAAU4K,GAAaiB,GAAvB,kEACE,OADF,SACQG,aAAWzB,GAAsCG,GAAYmB,GADrE,wCAGA,SAAUhB,KAAV,kEACE,OADF,SACQmB,aACJzB,GACAI,IAHJ,wCAQe,YAAWkB,GAAX,kEACb,OADa,SACPI,aAAI,CAACL,aAAKhB,GAAciB,GAAQD,aAAKf,MAD9B,wCClER,IAAMzG,GAAU,SAAC,GAA6C,IAA3CpE,EAA0C,EAA1CA,QAAS+D,EAAiC,EAAjCA,EAAGD,EAA8B,EAA9BA,EACpC,GAAIC,EAAID,EAAG,MAAMmD,MAAM,qCACvB,GAAInD,GAAK,EAAG,MAAMmD,MAAM,4BAExB,IAAMiF,EAAahF,EAAelH,GAC5B8G,EAAYqF,OAAOjN,KAAKkN,OAAOtD,OAAO,GAEtCb,EAAyB,YAAInD,MAAMf,IAAInD,KAAI,iBAAM,MA0BvD,OAzBAsL,EAAWzH,SAAQ,SAAC4H,EAAK3H,GACvB,IAAI4H,EtBXwB,SAACvI,EAAWkC,GAC1C,OAAO,YAAInB,MAAMf,IAAInD,KAAI,kBAAM4F,KAAKC,MAAMD,KAAK+F,SAAWtG,MsBUhDuG,CAAiB1I,EAAI,EnBjBhB,KmBkBbmE,EAAWxD,SAAQ,SAACM,EAAG0H,GACrB,IAAItE,EAASkE,EACPK,EAASD,EAAI,EACnBH,EAAE7H,SAAQ,SAACkI,EAAKC,GACdzE,GAAUwE,EAAMnG,KAAKqG,IAAIH,EAAQE,EAAI,GACrCzE,GnBvBS,OmByBXF,EAAWwE,GAAGpE,KAAKF,SAGPF,EAAWrH,KAAI,SAAC4H,GAAD,OAAOf,EAAiBe,MAEhC5H,KACrB,SAACoG,EAAGtC,GACF,MAAO,CACLoC,YACAhD,IACAwC,EAAG5B,EAAI,EACPsC,S,aClBE8F,I,aAeO1I,I,aAkBA2I,I,iBAjCjB,SAAUD,GAAWE,EAAiBjF,GAAtC,6EACSiF,EAAU,GADnB,iBAIM,OtBjBqB9E,EsBeKH,EAAOiF,EAAU,GAAvCC,EtBdF,GAAN,OAAU/E,EAAMpB,UAAhB,aAA8BoB,EAAMpE,EAApC,aAA0CoE,EAAM5B,EAAhD,aAAsD4B,EAAMlB,GsBY9D,kBAIY4E,aAAKnB,GAAawC,GAJ9B,OAMM,OADAD,IALN,SAMYlB,a3BV2B,CACrC/J,KAAMgB,I2BGR,+BAQM,OARN,oCAQY+I,aACJxB,GAAS,8DATjB,QAYI,OAZJ,UAYU,IAAI4C,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAAS,QAZvD,yDtBb0B,IAACjF,IsBa3B,kBAeO,SAAU9D,GAAQ8F,GAAlB,gFAIH,OAJG,WAEuBA,EAAOtG,QAAQD,YAAjC3D,EAFL,EAEKA,QAAS8D,EAFd,EAEcA,EAAGC,EAFjB,EAEiBA,EACdgE,EAAkBsF,GAAY,CAAErN,UAAS+D,IAAGD,MAH/C,SAIGgI,a3B5BoC,CAC5C/J,KAAMgB,EACNa,QAAS,CAAEU,M2B0BYP,KAJlB,OAKH,OALG,SAKG+I,GAAW/I,EAAGgE,GALjB,OAMH,OANG,SAMG+D,a3BhBuB,CAC/B/J,KAAMgB,I2BSD,+BAQH,OARG,oCAQG+I,aACJxB,GACE,4EAVD,QAaH,OAbG,UAaGwB,aAAI9I,KAbP,uDAkBA,SAAU+J,KAAV,kEACL,OADK,SACCf,aAAWjJ,EAAkCqB,IAD9C,wCAKQ,gFACb,OADa,SACP6H,aAAI,CAACL,aAAKmB,MADH,wC,iBC3CLO,I,aAmCOC,I,iBAnCjB,SAAUD,GACRpD,GADF,oFAKa,OALb,SAKmByB,eALnB,uBAII7D,eAAkB2B,EAJtB,EAIsBA,QAAS1B,EAJ/B,EAI+BA,OAExB0B,EANP,iDAQUsC,EAAS7B,EAAOtG,QAAhBmI,KARV,SAWI7D,EAAQxB,EAAWqF,GAXvB,wBAaI,OAbJ,oCAaUD,aAAIxB,GAAS,yCAbvB,6CAiBwB,IAAlBvC,EAAOC,OAjBb,oBAkBQD,EAAO,GAAGjB,YAAcoB,EAAMpB,UAlBtC,iBAmBM,OAnBN,UAmBYgF,aAAIxB,GAAS,qCAnBzB,8CAsBQvC,EAAOyF,MAAK,SAAChF,GAAD,OAAOA,EAAElC,IAAM4B,EAAM5B,KAtBzC,iBAuBM,OAvBN,UAuBYwF,aACJxB,GAAS,+DAxBjB,0CA+BE,OADMmD,EA9BR,sBA8BwB1F,GA9BxB,CA8BgCG,IA9BhC,UA+BQ4D,aAAI7C,GAAUwE,IA/BtB,uDAmCO,SAAUF,KAAV,kEACL,OADK,SACCvB,aACJhD,GACAsE,IAHG,wCAQQ,gFACb,OADa,SACPrB,aAAI,CAACL,aAAK2B,MADH,wC,iBC/CEG,IAAV,SAAUA,KAAV,kEACL,OADK,SACCzB,aAAI,CACRL,aAAK+B,IACL/B,aAAKgC,GAAU/B,IACfD,aAAKiC,MAJF,wCCWP,IAAMC,GAAiBC,eAEjBC,GAAkC,CAACF,IAKlC,IAAMjC,GAAQoC,aAAYjE,GAAakE,KAAe,WAAf,EAAmBF,KAEjEF,GAAeK,IAAIT,I,wBCrBNU,GAAoB,SAAC,GAAkB,IAAhBxP,EAAe,EAAfA,SAC5BgL,EAAU9K,aAAY,SAACC,GAAD,OAAWA,EAAM4G,IAAIiE,WAC3C1G,EAAWC,cAQjB,OANAlE,qBAAU,WACJ2K,IACF1G,EPVyB,CAC7BnB,KAAMwI,KOUFrH,EPFmC,CACvCnB,KAAMwI,QOGH,CAACX,EAAS1G,IACN,oCAAG0G,EAAUhL,EAAW,kBAAC,GAAD,QAG3ByP,GAAsB,kBAC1B,yBAAKlO,UAAWC,KAAOkO,QACrB,qDACA,6BACE,yDACA,kEACuC,IACrC,uBAAGjF,KAAK,iCAAR,iCAEK,IAJP,kBAOA,6HCDSkF,GArBc,WAC3B,OACE,kBAAC,IAAD,CAAU1C,MAAOA,IACf,kBAAC,GAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGlL,GAAMC,KAAI,SAACC,GAAD,OACT,kBAAC,IAAD,CACE2N,OAAK,EACL1N,IAAG,eAAUD,EAAKE,MAClBE,KAAMJ,EAAKI,KACXiI,UAAWrI,EAAKqI,oBCVZuF,QACW,cAA7BrH,OAAOsH,SAASC,UAEe,UAA7BvH,OAAOsH,SAASC,UAEhBvH,OAAOsH,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFzP,SAAS0P,eAAe,SDiIpB,kBAAmB1M,WACrBA,UAAU2M,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAzQ,GACLqM,QAAQrM,MAAMA,EAAMmB,c","file":"static/js/main.9693e5f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sharingComp\":\"SharingOrg_sharingComp__2i_v4\",\"title\":\"SharingOrg_title__3z7HK\",\"body\":\"SharingOrg_body__15mPA\",\"cards\":\"SharingOrg_cards__6wPS6\",\"card\":\"SharingOrg_card__Vb8KW\",\"card-fade-in-1\":\"SharingOrg_card-fade-in-1__2MRUR\",\"card-fade-in-2\":\"SharingOrg_card-fade-in-2__Dk0l-\",\"card-fade-in-3\":\"SharingOrg_card-fade-in-3__2523f\",\"nfc\":\"SharingOrg_nfc__24NrY\",\"waves\":\"SharingOrg_waves__2wbHj\",\"wave\":\"SharingOrg_wave__2vz4z\",\"nfcLogo\":\"SharingOrg_nfcLogo__2iaYV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardTable\":\"ReconstructionOrg_cardTable__1sC5Y\",\"card\":\"ReconstructionOrg_card__1ag0j\",\"fade-in-over\":\"ReconstructionOrg_fade-in-over__1oPjd\",\"y\":\"ReconstructionOrg_y__3H9ct\",\"waves\":\"ReconstructionOrg_waves__335Ua\",\"wave\":\"ReconstructionOrg_wave__FFI_O\",\"messageBody\":\"ReconstructionOrg_messageBody__17fee\",\"width-up\":\"ReconstructionOrg_width-up__1HQKT\",\"message\":\"ReconstructionOrg_message__1wPL3\",\"height-up\":\"ReconstructionOrg_height-up__3UL0d\",\"info\":\"ReconstructionOrg_info__3jOeY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"CustomInput_form__37zEK\",\"label\":\"CustomInput_label__2r_0u\",\"inputNum\":\"CustomInput_inputNum__KDUZA\",\"numValue\":\"CustomInput_numValue__A1_NZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sharingTable\":\"SharingTable_sharingTable__3Oz6-\",\"message\":\"SharingTable_message__2TChX\",\"fade-out-smaller\":\"SharingTable_fade-out-smaller__2aCDG\",\"cardTable\":\"SharingTable_cardTable__3pbMt\",\"card\":\"SharingTable_card__2pfwy\",\"hidden\":\"SharingTable_hidden__3-cjz\",\"fade-out-over\":\"SharingTable_fade-out-over__KcWcE\",\"info\":\"SharingTable_info__vcXU5\",\"fade-in\":\"SharingTable_fade-in__235z6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Home_img__JSeNz\",\"card\":\"Home_card__AHLqY\",\"warning\":\"Home_warning__cWbsQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__1LNGG\",\"body\":\"Layout_body__euvlM\",\"title\":\"Layout_title__1A0vI\",\"footer\":\"Layout_footer__3dJbr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMain\":\"ErrorGate_errorMain__3swJY\",\"fade-in\":\"ErrorGate_fade-in__1uoGb\"};","module.exports = __webpack_public_path__ + \"static/media/logo.82b50d8d.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customButton\":\"CustomButton_customButton__3WPOj\"};","module.exports = __webpack_public_path__ + \"static/media/Nfc-icon-vector-01.ac821891.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sharesTable\":\"SharesTable_sharesTable__2SUkD\"};","module.exports = __webpack_public_path__ + \"static/media/home.794daaaf.svg\";","module.exports = __webpack_public_path__ + \"static/media/sharing.88b1bd60.svg\";","module.exports = __webpack_public_path__ + \"static/media/reconstruction.3126da9b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"denied\":\"NFCGate_denied__16p6I\"};","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport styles from './ErrorGate.module.scss'\r\n// ____________________________________________________________________________\r\n//\r\nexport const ErrorGate: React.FC = ({ children }) => {\r\n  const error = useSelector((state) => state.config.error)\r\n\r\n  useEffect(() => {\r\n    if (!error) return\r\n    if (new Date().getTime() - error.date.getTime() > 500) return\r\n    const targetNode = document.querySelector('#error')\r\n    if (!targetNode) return\r\n    targetNode.textContent = null\r\n\r\n    const errorMain = document.createElement('div')\r\n    const errorTitle = document.createElement('div')\r\n    errorTitle.classList.add('error__title')\r\n    errorTitle.innerHTML = 'Error'\r\n    const errorBody = document.createElement('div')\r\n    errorBody.classList.add('error__body')\r\n    errorBody.innerHTML = error.message\r\n\r\n    errorMain.appendChild(errorTitle)\r\n    errorMain.appendChild(errorBody)\r\n    targetNode.appendChild(errorMain)\r\n  }, [error])\r\n\r\n  return (\r\n    <>\r\n      <div id=\"error\" className={styles.errorMain}></div>\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport styles from './Layout.module.scss'\r\n\r\nimport { ErrorGate } from '../../molecules/ErrorGate/ErrorGate.component'\r\n\r\nimport { pages } from '../../pages'\r\n// ____________________________________________________________________________\r\n//\r\ntype Layout = {\r\n  pageTitle?: string\r\n}\r\n// ____________________________________________________________________________\r\n//\r\nexport const Layout: React.FC<Layout> = ({ children, pageTitle }) => {\r\n  return (\r\n    <div className={styles.layout}>\r\n      <ErrorGate>\r\n        <div className={styles.body}>\r\n          {pageTitle && <div className={styles.title}>{pageTitle}</div>}\r\n          {children}\r\n        </div>\r\n        <div className={styles.footer}>\r\n          {pages.map((page) => (\r\n            <Link key={`PATH-${page.name}`} to={page.path}>\r\n              <img src={page.iconUrl} alt={page.name} />\r\n              <span>{page.name}</span>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </ErrorGate>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\n\r\nimport styles from './CustomInput.module.scss'\r\n// _________________________________________________\r\n//\r\ntype CustomInputText = {\r\n  label?: string\r\n  value: string\r\n  setValue: (value: string) => void\r\n} & React.InputHTMLAttributes<HTMLInputElement>\r\n\r\ntype CustomInputNumber = {\r\n  label?: string\r\n  min: number\r\n  max: number\r\n  value: number\r\n  setValue: (value: number) => void\r\n} & React.InputHTMLAttributes<HTMLInputElement>\r\n// _________________________________________________\r\n//\r\nexport const CustomInputText: React.FC<CustomInputText> = ({\r\n  label,\r\n  setValue,\r\n  ...otherProps\r\n}) => {\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.preventDefault()\r\n\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.form}>\r\n      {label ? (\r\n        <label>\r\n          <span className={styles.label}>{label}</span>\r\n          <input type=\"text\" onChange={handleChange} {...otherProps} />\r\n        </label>\r\n      ) : (\r\n        <input type=\"text\" onChange={handleChange} {...otherProps} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const CustomInputNumber: React.FC<CustomInputNumber> = ({\r\n  label,\r\n  value,\r\n  setValue,\r\n  min,\r\n  max,\r\n  ...otherProps\r\n}) => {\r\n  const handleIncrement = useCallback(() => {\r\n    if (value < max) {\r\n      navigator.vibrate(50)\r\n      setValue(value + 1)\r\n    }\r\n  }, [value, max, setValue])\r\n  const handleDecrement = useCallback(() => {\r\n    if (value > min) {\r\n      navigator.vibrate(50)\r\n      setValue(value - 1)\r\n    }\r\n  }, [value, min, setValue])\r\n\r\n  return (\r\n    <div className={styles.form}>\r\n      {label ? (\r\n        <>\r\n          <span className={styles.label}>{label}</span>\r\n          <div className={styles.inputNum}>\r\n            <button onClick={handleDecrement} disabled={value <= min}>\r\n              -\r\n            </button>\r\n            <span className={styles.numValue}>{value}</span>\r\n            <button onClick={handleIncrement} disabled={value >= max}>\r\n              +\r\n            </button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className={styles.inputNum}>\r\n          <button onClick={handleDecrement}>-</button>\r\n          <span className={styles.numValue}>{value}</span>\r\n          <button onClick={handleIncrement}>+</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport styles from './CustomButton.module.scss'\r\n// _______________________________________\r\n//\r\ntype CustomButton = {\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\r\n} & React.ButtonHTMLAttributes<HTMLButtonElement>\r\n// _______________________________________\r\n//\r\nexport const CustomButton: React.FC<CustomButton> = ({\r\n  children,\r\n  onClick,\r\n  ...otherProps\r\n}) => {\r\n  return (\r\n    <>\r\n      <button\r\n        className={styles.customButton}\r\n        onClick={onClick}\r\n        {...otherProps}\r\n      >\r\n        {children}\r\n      </button>\r\n    </>\r\n  )\r\n}\r\n","export const SharingActionTypes = {\r\n  INIT_SHARING_STATE: 'SHARING:INIT_SHARING_STATE',\r\n  SET_COUNTER: 'SHARING:SET_COUNTER',\r\n  DECREMENT_COUNTER: 'SHARING:DECREMENT_COUNTER',\r\n  START_SHARING: 'SHARING:START_SHARING',\r\n  END_SHARING: 'SHARING:END_SHARING',\r\n} as const\r\n","import { SharingActionTypes } from './sharing.types'\r\n\r\nimport { MessageForm } from '../../types/form'\r\n// ____________________________________________________________________________\r\n//\r\nexport const initSharingState = () => ({\r\n  type: SharingActionTypes.INIT_SHARING_STATE,\r\n})\r\n\r\nexport const setCounter = (count: number) => ({\r\n  type: SharingActionTypes.SET_COUNTER,\r\n  payload: { count },\r\n})\r\n\r\nexport const decrementCounter = () => ({\r\n  type: SharingActionTypes.DECREMENT_COUNTER,\r\n})\r\n\r\nexport const startSharing = (messageForm: MessageForm) => ({\r\n  type: SharingActionTypes.START_SHARING,\r\n  payload: { messageForm },\r\n})\r\n\r\nexport const endSharing = () => ({\r\n  type: SharingActionTypes.END_SHARING,\r\n})\r\n","import React, { useState, useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport {\r\n  CustomInputText,\r\n  CustomInputNumber,\r\n} from '../../atoms/CustomInput/CustomInput.components'\r\nimport { CustomButton } from '../../atoms/CustomButton/CustomButton.component'\r\n\r\nimport { startSharing } from '../../../store/sharing/sharing.actions'\r\n\r\nimport { MessageForm as TMessageForm } from '../../../types/form'\r\n// ____________________________________________________________________________\r\n//\r\nexport const MessageForm: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const [message, setMessage] = useState('')\r\n  const [threshhold, setThreshhold] = useState(2)\r\n  const [num, setNum] = useState(3)\r\n\r\n  const handleSharingStart = useCallback(() => {\r\n    const messageForm: TMessageForm = {\r\n      message,\r\n      t: threshhold,\r\n      n: num,\r\n    }\r\n    dispatch(startSharing(messageForm))\r\n  }, [dispatch, message, threshhold, num])\r\n\r\n  return (\r\n    <div>\r\n      <CustomInputText\r\n        label=\"Message\"\r\n        value={message}\r\n        setValue={setMessage}\r\n        maxLength={20}\r\n      />\r\n      <CustomInputNumber\r\n        label=\"Threshold\"\r\n        value={threshhold}\r\n        setValue={setThreshhold}\r\n        min={2}\r\n        max={num}\r\n      />\r\n      <CustomInputNumber\r\n        label=\"Number of Shares\"\r\n        value={num}\r\n        setValue={setNum}\r\n        min={threshhold}\r\n        max={9}\r\n      />\r\n      <div style={{ textAlign: 'center' }}>\r\n        <CustomButton onClick={handleSharingStart} disabled={!message}>\r\n          Sharing\r\n        </CustomButton>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport styles from './SharingTable.module.scss'\r\n// ____________________________________________________________________________\r\n//\r\nconst cardCSS = (i: number, num: number) => {\r\n  return `transform: translate(-50%, -50%) rotate(${\r\n    (60 * (-num + 2 * i + 1)) / num\r\n  }deg);`\r\n}\r\n\r\nconst SharingCount: React.FC = () => {\r\n  const { sharesNum, count } = useSelector((state) => state.sharing)\r\n\r\n  useEffect(() => {\r\n    const targets = document.querySelectorAll('#card')\r\n    if (targets) {\r\n      targets.forEach((t, i) => {\r\n        t.setAttribute('style', cardCSS(i, count))\r\n      })\r\n    }\r\n  }, [count])\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.cardTable}>\r\n        {[...Array(sharesNum)].map((_, i) => (\r\n          <div\r\n            key={`CARD-${i}`}\r\n            id=\"card\"\r\n            className={`${styles.card} ${i + 1 > count ? styles.hidden : ''}`}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport const SharingTable: React.FC = () => {\r\n  const { message } = useSelector((state) => state.sharing)\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.sharingTable}>\r\n        <div className={styles.message}>{message}</div>\r\n        <SharingCount />\r\n      </div>\r\n      <div className={styles.info}>PUT NFC</div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { MessageForm } from '../../molecules/MessageForm/MessageForm.component'\r\nimport { SharingTable } from '../../molecules/SharingTable/SharingTable.component'\r\n\r\nimport nfcLogo from '../../../assets/Nfc-icon-vector-01.svg'\r\nimport styles from './SharingOrg.module.scss'\r\n// ____________________________________________________________________________\r\n//\r\nexport const SharingOrg: React.FC = () => {\r\n  const step = useSelector((state) => state.sharing.sharingStep)\r\n  return (\r\n    <>\r\n      {step === 'INPUT' && <MessageForm />}\r\n      {step === 'SHARING' && <SharingTable />}\r\n      {step === 'SUCCESS' && <SharingCompleted />}\r\n    </>\r\n  )\r\n}\r\n\r\nconst SharingCompleted: React.FC = () => {\r\n  return (\r\n    <div className={styles.sharingComp}>\r\n      <div className={styles.title}>Completed !!</div>\r\n      <div className={styles.body}>\r\n        <div className={styles.cards}>\r\n          <div className={styles.card}></div>\r\n          <div className={styles.card}></div>\r\n          <div className={styles.card}></div>\r\n        </div>\r\n        <div className={styles.nfc}>\r\n          <div className={styles.waves}>\r\n            <span className={styles.wave}></span>\r\n            <span className={styles.wave}></span>\r\n            <span className={styles.wave}></span>\r\n          </div>\r\n          <div className={styles.nfcLogo}>\r\n            <img src={nfcLogo} alt=\"nfc\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export interface Coordinate {\r\n  x: number\r\n  y: number\r\n}\r\n// ____________________________________________________________________________\r\n//\r\nexport const getRandomIntList = (n: number, q: number): number[] => {\r\n  return [...Array(n)].map(() => Math.floor(Math.random() * q))\r\n}\r\n\r\nexport const elInverse = (el: number, q: number): number => {\r\n  if (el === 0) return 1\r\n  return modExp(el, q - 2, q)\r\n}\r\n\r\nexport const seekIntercept = (shares: Coordinate[], q: number): number => {\r\n  let result = 0\r\n\r\n  for (const { x, y } of shares) {\r\n    let res = y\r\n    for (const s of shares) {\r\n      if (x === s.x) continue\r\n      res *= (-s.x * elInverse(x - s.x, q)) % q\r\n    }\r\n    result += res\r\n  }\r\n  result = result < 0 ? (result % q) + q : result % q\r\n\r\n  return result\r\n}\r\n// __________________________\r\n//\r\n// https://gist.github.com/krzkaczor/0bdba0ee9555659ae5fe\r\nconst modExp = (a: number, b: number, n: number) => {\r\n  a = a % n\r\n  let result = 1\r\n  let x = a\r\n\r\n  while (b > 0) {\r\n    const leastSignificantBit = b % 2\r\n    b = Math.floor(b / 2)\r\n\r\n    if (leastSignificantBit === 1) {\r\n      result = result * x\r\n      result = result % n\r\n    }\r\n\r\n    x = x * x\r\n    x = x % n\r\n  }\r\n  return result\r\n}\r\n","import * as util from 'util'\r\n\r\nimport { Share } from '../types/store'\r\n// ____________________________________________________________________________\r\n//\r\nexport const shareToStr = (share: Share): string => {\r\n  return `${share.sharingId},,${share.t},,${share.x},,${share.y}`\r\n}\r\n\r\nexport const strToShare = (str: string): Share => {\r\n  const list = str.split(',,')\r\n\r\n  try {\r\n    const share: Share = {\r\n      sharingId: list[0],\r\n      t: Number(list[1]),\r\n      x: Number(list[2]),\r\n      y: list[3],\r\n    }\r\n    return share\r\n  } catch {\r\n    throw new Error('対応している形式ではありません。')\r\n  }\r\n}\r\n\r\nexport const encodeToNumArr = (str: string) => {\r\n  let encoder: TextEncoder\r\n  if ('TextEncoder' in window) {\r\n    encoder = new TextEncoder()\r\n  } else {\r\n    encoder = new util.TextEncoder()\r\n  }\r\n  const u8Array = encoder.encode(str)\r\n  const result = Array.from(u8Array)\r\n\r\n  return result\r\n}\r\n\r\nexport const decodeFromNumArr = (numArr: number[]) => {\r\n  const u8Array = new Uint8Array(numArr)\r\n  let decoder: TextDecoder\r\n  if ('TextDecoder' in window) {\r\n    decoder = new TextDecoder()\r\n  } else {\r\n    decoder = new util.TextDecoder() as TextDecoder\r\n  }\r\n  const result = decoder.decode(u8Array)\r\n\r\n  return result\r\n}\r\n","import { seekIntercept } from './utils'\r\nimport { encodeToNumArr, decodeFromNumArr } from '../convertor'\r\nimport { q } from './config'\r\n\r\nimport type { Coordinate } from './utils'\r\nimport type { Share } from '../../types/store'\r\n//_____________________________________________________________________________\r\n//\r\nexport const reconstruction = (shares: Share[]): string => {\r\n  if (shares.length === 0) throw new Error('shares must be none empty')\r\n  if (shares[0].t > shares.length)\r\n    throw new Error('the number of shares must be greater or equal t')\r\n\r\n  const sharesList: Coordinate[][] = []\r\n  for (const share of shares) {\r\n    const shareYEncoded = encodeToNumArr(share.y)\r\n    shareYEncoded.forEach((shareY, i) => {\r\n      const corr: Coordinate = {\r\n        x: share.x,\r\n        y: shareY,\r\n      }\r\n      if (i in sharesList) {\r\n        sharesList[i].push(corr)\r\n      } else {\r\n        sharesList[i] = [corr]\r\n      }\r\n    })\r\n  }\r\n  const msgNumArr = sharesList.map((shares) => seekIntercept(shares, q))\r\n  const result = decodeFromNumArr(msgNumArr)\r\n\r\n  return result\r\n}\r\n","export const q = 127\r\n","import React from 'react'\r\n\r\nimport { Share } from '../../../types/store'\r\n\r\nimport styles from './SharesTable.module.scss'\r\n// ____________________________________________________________________________\r\n//\r\ntype SharesTable = {\r\n  shares: Share[]\r\n}\r\n// ____________________________________________________________________________\r\n//\r\nexport const SharesTable: React.FC<SharesTable> = ({ shares }) => {\r\n  return (\r\n    <table className={styles.sharesTable}>\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Share</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {shares.map((share) => (\r\n          <tr key={`SHARE-${share.x}`}>\r\n            <td>{share.x}</td>\r\n            <td>{share.y}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { reconstruction as SSSSReconstruction } from '../../../logics/SSSS/reconstruction'\r\n\r\nimport { SharesTable } from '../../molecules/SharesTable/SharesTable.component'\r\n\r\nimport styles from './ReconstructionOrg.module.scss'\r\n// ____________________________________________________________________________\r\n//\r\nexport const ReconstructionOrg: React.FC = () => {\r\n  const shares = useSelector((state) => state.reconstruction.shares)\r\n  const [message, setMessage] = useState<null | string>(null)\r\n\r\n  useEffect(() => {\r\n    if (shares.length === 0) return\r\n\r\n    const { t } = shares[0]\r\n    if (t <= shares.length) {\r\n      setMessage(SSSSReconstruction(shares.slice(0, t)))\r\n    }\r\n  }, [shares])\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.cardTable}>\r\n        {shares.map((share) => (\r\n          <div className={styles.card} key={`CARD-${share.x}`}>\r\n            <span className={styles.y}>{share.y}</span>\r\n          </div>\r\n        ))}\r\n        {!message && (\r\n          <div className={styles.waves}>\r\n            <div className={styles.wave}></div>\r\n            <div className={styles.wave}></div>\r\n            <div className={styles.wave}></div>\r\n          </div>\r\n        )}\r\n        {message && (\r\n          <div className={styles.messageBody}>\r\n            <span className={styles.message}>{message}</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <div className={styles.info}>\r\n          {message ? 'Completed!!' : 'PUT SHARE'}\r\n          {shares.length !== 0 && `(${shares.length}/${shares[0].t})`}\r\n        </div>\r\n        {shares.length !== 0 && <SharesTable shares={shares} />}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export const ReconstructionActionTypes = {\r\n  INIT_RECONSTRUCTION_STATE: 'RECONSTRUCTION:INIT_RECONSTRUCTION_STATE',\r\n  SET_MESSAGE: 'RECONSTRUCTION:SET_MESSAGE',\r\n  SET_SHARES: 'RECONSTRUCTION:SET_SHARES',\r\n  APPEND_SHARE_FROM_TEXT: 'RECONSTRUCTION:APPEND_SHARE_FROM_TEXT',\r\n  CHANGE_ISREADY: 'RECONSTRUCTION:CHANGE_ISREADY',\r\n} as const\r\n","import { ReconstructionActionTypes } from './reconstruction.types'\r\n\r\nimport { Share } from '../../types/store'\r\n// ____________________________________________________________________________\r\n//\r\nexport const initReconstructionState = () => ({\r\n  type: ReconstructionActionTypes.INIT_RECONSTRUCTION_STATE,\r\n})\r\n\r\nexport const setMessage = (message: string) => ({\r\n  type: ReconstructionActionTypes.SET_MESSAGE,\r\n  payload: { message },\r\n})\r\n\r\nexport const setShares = (shares: Share[]) => ({\r\n  type: ReconstructionActionTypes.SET_SHARES,\r\n  payload: { shares },\r\n})\r\n\r\nexport const appendShareFromText = (text: string) => ({\r\n  type: ReconstructionActionTypes.APPEND_SHARE_FROM_TEXT,\r\n  payload: { text },\r\n})\r\n\r\nexport const changeIsReady = (isReady: boolean) => ({\r\n  type: ReconstructionActionTypes.CHANGE_ISREADY,\r\n  payload: { isReady },\r\n})\r\n","import React from 'react'\r\nimport { RouteComponentProps } from 'react-router'\r\n\r\nimport { HomePage } from './Home/Home.component'\r\nimport { SharingPage } from './Sharing/Sharing.component'\r\nimport { ReconstructionPage } from './Reconstruction/Reconstruction.component'\r\n\r\nimport homeIcon from '../../assets/home.svg'\r\nimport sharingIcon from '../../assets/sharing.svg'\r\nimport reconstructionIcon from '../../assets/reconstruction.svg'\r\n// ____________________________________________________________________________\r\n//\r\nexport type PageName = 'HOME' | 'SHARING' | 'RECONSTRUCTION'\r\nexport interface PageList {\r\n  path: string\r\n  name: PageName\r\n  component: React.FC<RouteComponentProps>\r\n  iconUrl: string\r\n}\r\n// ____________________________________________________________________________\r\n//\r\nexport const pages: PageList[] = [\r\n  { path: '/', name: 'HOME', component: HomePage, iconUrl: homeIcon },\r\n  {\r\n    path: '/sharing',\r\n    name: 'SHARING',\r\n    component: SharingPage,\r\n    iconUrl: sharingIcon,\r\n  },\r\n  {\r\n    path: '/reconstruction',\r\n    name: 'RECONSTRUCTION',\r\n    component: ReconstructionPage,\r\n    iconUrl: reconstructionIcon,\r\n  },\r\n]\r\n","import React from 'react'\r\nimport { RouteComponentProps } from 'react-router'\r\n\r\nimport { Layout } from '../../layouts/Layout/Layout.component'\r\n\r\nimport logo from '../../../assets/logo.svg'\r\n\r\nimport styles from './Home.module.scss'\r\n// ____________________________________________________________________________\r\n//\r\nexport const HomePage: React.FC<RouteComponentProps> = () => {\r\n  return (\r\n    <Layout>\r\n      <div className={styles.img}>\r\n        <img src={logo} alt=\"real sharing\" />\r\n      </div>\r\n      <div className={styles.card}>\r\n        <h1>Real Sharing</h1>\r\n        <p>A simulation web app of a secret sharing scheme using NFC.</p>\r\n        <ul>\r\n          <li>\r\n            Repo:{' '}\r\n            <a href=\"https://github.com/syakoo/real_share_app\">\r\n              https://github.com/syakoo/real_share_app\r\n            </a>\r\n          </li>\r\n          <li>\r\n            Movie:{' '}\r\n            <a href=\"https://youtu.be/6DLYic2Zvy0\">\r\n              https://youtu.be/6DLYic2Zvy0\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className={styles.card}>\r\n        <h1>What's the Secret Sharing</h1>\r\n        <p>\r\n          From Wikipedia(\r\n          <a href=\"https://en.wikipedia.org/wiki/Secret_sharing\">\r\n            Secret sharing\r\n          </a>\r\n          ):\r\n        </p>\r\n        <i>\r\n          Secret sharing (also called secret splitting) refers to methods for\r\n          distributing a secret amongst a group of participants, each of whom is\r\n          allocated a share of the secret. The secret can be reconstructed only\r\n          when a sufficient number, of possibly different types, of shares are\r\n          combined together; individual shares are of no use on their own.\r\n        </i>\r\n      </div>\r\n      <div className={styles.card}>\r\n        <h1>Help</h1>\r\n        <h2>SharingForm</h2>\r\n        <p>\r\n          In the sharing page, fill out the input form. The form contains three\r\n          params below.\r\n        </p>\r\n        <ul>\r\n          <li>Message</li>\r\n          <li>Threshold</li>\r\n          <li>Number of Shares</li>\r\n        </ul>\r\n        <h3>Message</h3>\r\n        <p>\r\n          The string you want to secret.{' '}\r\n          <span className={styles.warning}>\r\n            Due to encoding issues, non-alphanumeric characters may not work\r\n            well.\r\n          </span>\r\n        </p>\r\n        <h3>Threshold</h3>\r\n        <p>The number of shares needed to unlock the secret.</p>\r\n        <h3>Number of Shares</h3>\r\n        <p>The number of shares for writing data to NFC tags and cards.</p>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { Layout } from '../../layouts/Layout/Layout.component'\r\nimport { SharingOrg } from '../../organisms/SharingOrg/SharingOrg.component'\r\n\r\nimport { initSharingState } from '../../../store/sharing/sharing.actions'\r\n// ____________________________________________________________________________\r\n//\r\nexport const SharingPage: React.FC<RouteComponentProps> = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initSharingState())\r\n    }\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <Layout pageTitle=\"Sharing\">\r\n      <SharingOrg />\r\n    </Layout>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { Layout } from '../../layouts/Layout/Layout.component'\r\nimport { ReconstructionOrg } from '../../organisms/ReconstructionOrg/ReconstructionOrg.component'\r\n\r\nimport {\r\n  changeIsReady,\r\n  initReconstructionState,\r\n} from '../../../store/reconstruction/reconstruction.actions'\r\n// ____________________________________________________________________________\r\n//\r\nexport const ReconstructionPage: React.FC<RouteComponentProps> = () => {\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(changeIsReady(true))\r\n    return () => {\r\n      dispatch(initReconstructionState())\r\n    }\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <Layout pageTitle=\"Reconstcution\">\r\n      <ReconstructionOrg />\r\n    </Layout>\r\n  )\r\n}\r\n","import { ReducerActions } from '../../types/store'\r\n// ____________________________________________________________________________\r\n//\r\nexport interface NFCState {\r\n  enabled: boolean\r\n  fetchedMessage: string\r\n  reader: NDEFReader | null\r\n  writer: NDEFWriter | null\r\n}\r\nexport type NFCActions = ReducerActions<typeof import('./nfc.actions')>\r\n// ____________________________________________________________________________\r\n//\r\nconst initialState: NFCState = {\r\n  enabled: 'NDEFReader' in window && 'NDEFWriter' in window,\r\n  fetchedMessage: '',\r\n  reader: null,\r\n  writer: null,\r\n}\r\n// ____________________________________________________________________________\r\n//\r\nexport const NFCReducer = (state = initialState, action: NFCActions) => {\r\n  switch (action.type) {\r\n    case 'NFC:INIT_NDEF':\r\n      if (state.enabled && !state.reader) {\r\n        return {\r\n          ...state,\r\n          reader: new NDEFReader(),\r\n          writer: new NDEFWriter(),\r\n        }\r\n      } else {\r\n        return state\r\n      }\r\n    case 'NFC:SET_FETCHED_MESSAGE':\r\n      return {\r\n        ...state,\r\n        fetchedMessage: action.payload.message,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { MyError, ReducerActions } from '../../types/store'\r\n// ____________________________________________________________________________\r\n//\r\nexport interface ConfigState {\r\n  error: MyError | null\r\n}\r\nexport type ConfigActions = ReducerActions<typeof import('./config.actions')>\r\n// ____________________________________________________________________________\r\n//\r\nconst initialState: ConfigState = {\r\n  error: null,\r\n}\r\n// ____________________________________________________________________________\r\n//\r\nexport const configReducer = (state = initialState, action: ConfigActions) => {\r\n  switch (action.type) {\r\n    case 'CONFIG:SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: {\r\n          message: action.payload.error,\r\n          date: new Date(),\r\n        },\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { ReducerActions } from '../../types/store'\r\n//_____________________________________________________________________________\r\n//\r\nexport interface SharingState {\r\n  sharingStep: 'INPUT' | 'SHARING' | 'SUCCESS'\r\n  message: string\r\n  sharesNum: number\r\n  count: number\r\n}\r\nexport type SharingActions = ReducerActions<typeof import('./sharing.actions')>\r\n// ____________________________________________________________________________\r\n//\r\nexport const initialState: SharingState = {\r\n  sharingStep: 'INPUT',\r\n  message: '',\r\n  sharesNum: 0,\r\n  count: 0,\r\n}\r\n// ____________________________________________________________________________\r\n//\r\nexport const sharingReducer = (\r\n  state = initialState,\r\n  action: SharingActions\r\n): SharingState => {\r\n  switch (action.type) {\r\n    case 'SHARING:INIT_SHARING_STATE':\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n      }\r\n    case 'SHARING:SET_COUNTER':\r\n      return {\r\n        ...state,\r\n        count: action.payload.count,\r\n      }\r\n    case 'SHARING:DECREMENT_COUNTER':\r\n      return {\r\n        ...state,\r\n        count: state.count - 1,\r\n      }\r\n    case 'SHARING:START_SHARING':\r\n      return {\r\n        ...state,\r\n        sharingStep: 'SHARING',\r\n        message: action.payload.messageForm.message,\r\n        sharesNum: action.payload.messageForm.n,\r\n      }\r\n    case 'SHARING:END_SHARING':\r\n      return {\r\n        ...state,\r\n        sharingStep: 'SUCCESS',\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { Share, ReducerActions } from '../../types/store'\r\n//_____________________________________________________________________________\r\n//\r\nexport interface ReconstructionState {\r\n  isReady: boolean\r\n  message: string\r\n  shares: Share[]\r\n}\r\nexport type ReconstructionActions = ReducerActions<\r\n  typeof import('./reconstruction.actions')\r\n>\r\n// ____________________________________________________________________________\r\n//\r\nexport const initialState: ReconstructionState = {\r\n  isReady: false,\r\n  message: '',\r\n  shares: [],\r\n}\r\n// ____________________________________________________________________________\r\n//\r\nexport const reconstructionReducer = (\r\n  state = initialState,\r\n  action: ReconstructionActions\r\n) => {\r\n  switch (action.type) {\r\n    case 'RECONSTRUCTION:INIT_RECONSTRUCTION_STATE':\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n      }\r\n    case 'RECONSTRUCTION:SET_MESSAGE':\r\n      return {\r\n        ...state,\r\n        message: action.payload.message,\r\n      }\r\n    case 'RECONSTRUCTION:SET_SHARES':\r\n      return {\r\n        ...state,\r\n        shares: action.payload.shares,\r\n      }\r\n    case 'RECONSTRUCTION:CHANGE_ISREADY':\r\n      return {\r\n        ...state,\r\n        isReady: action.payload.isReady,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\n\r\nimport { NFCState, NFCReducer } from './nfc/nfc.reducer'\r\nimport { ConfigState, configReducer } from './config/config.reducer'\r\nimport { SharingState, sharingReducer } from './sharing/sharing.reducer'\r\nimport {\r\n  ReconstructionState,\r\n  reconstructionReducer,\r\n} from './reconstruction/reconstruction.reducer'\r\n// ____________________________________________________________________________\r\n//\r\nexport interface State {\r\n  nfc: NFCState\r\n  config: ConfigState\r\n  sharing: SharingState\r\n  reconstruction: ReconstructionState\r\n}\r\n// ____________________________________________________________________________\r\n//\r\nexport const rootReducer = combineReducers<State>({\r\n  nfc: NFCReducer,\r\n  config: configReducer,\r\n  sharing: sharingReducer,\r\n  reconstruction: reconstructionReducer,\r\n})\r\n","export const ConfigActionTypes = {\r\n  SET_ERROR: 'CONFIG:SET_ERROR',\r\n} as const\r\n","import { ConfigActionTypes } from './config.types'\r\nimport { MyError } from '../../types/store'\r\n// ____________________________________________________________________________\r\n//\r\nexport const setError = (error: MyError['message']) => ({\r\n  type: ConfigActionTypes.SET_ERROR,\r\n  payload: { error },\r\n})\r\n","export const NFCActionTypes = {\r\n  INIT_NDEF: 'NFC:INIT_NDEF',\r\n  SET_FETCHED_MESSAGE: 'NFC:SET_FETCHED_MESSAGE',\r\n  START_NFC_READ_LISTEN: 'NFC:START_NFC_READ_LISTEN',\r\n} as const\r\n","import { NFCActionTypes } from './nfc.types'\r\n\r\n// ____________________________________________________________________________\r\n//\r\nexport const initNDEF = () => ({\r\n  type: NFCActionTypes.INIT_NDEF,\r\n})\r\n\r\nexport const setFetchedMessage = (message: string) => ({\r\n  type: NFCActionTypes.SET_FETCHED_MESSAGE,\r\n  payload: { message },\r\n})\r\n\r\nexport const startNFCReadListen = () => ({\r\n  type: NFCActionTypes.START_NFC_READ_LISTEN,\r\n})\r\n","import { all, put, call, takeLatest, select } from 'redux-saga/effects'\r\nimport { Store, Dispatch } from 'redux'\r\n\r\nimport { setFetchedMessage } from './nfc.actions'\r\nimport { appendShareFromText } from '../reconstruction/reconstruction.actions'\r\n\r\nimport { NFCActionTypes } from './nfc.types'\r\nimport { State } from '../rootReducer'\r\nimport { setError } from 'store/config/config.actions'\r\n// ____________________________________________________________________________\r\n//\r\nasync function writeNDEF(message: string, writer: NDEFWriter) {\r\n  await writer.write(message)\r\n}\r\nasync function readNFC(reader: NDEFReader, dispatch: Dispatch<any>) {\r\n  reader.onerror = (error) => {\r\n    console.log({ error })\r\n    throw new Error(error.message)\r\n  }\r\n\r\n  reader.onreading = (event) => {\r\n    for (const record of event.message.records) {\r\n      if (record.recordType === 'text') {\r\n        const textDecoder = new TextDecoder()\r\n        const data = textDecoder.decode(record.data)\r\n\r\n        dispatch(setFetchedMessage(data))\r\n      }\r\n    }\r\n  }\r\n  await reader.scan()\r\n}\r\nexport function* writingNDEF(message: string) {\r\n  const {\r\n    nfc: { writer },\r\n  }: State = yield select()\r\n\r\n  if (writer) {\r\n    yield call(writeNDEF, message, writer)\r\n  }\r\n}\r\nfunction* readingNFC(store: Store<State>) {\r\n  const {\r\n    nfc: { reader },\r\n  }: State = yield select()\r\n\r\n  if (reader) {\r\n    const { dispatch } = store\r\n    try {\r\n      yield call(readNFC, reader, dispatch)\r\n    } catch (error) {\r\n      yield put(setError('An error occurred while reading. Please try again.'))\r\n    }\r\n  }\r\n}\r\nfunction* appendFetchedMessageToShares(\r\n  action: ReturnType<typeof setFetchedMessage>\r\n) {\r\n  const { message } = action.payload\r\n  yield put(appendShareFromText(message))\r\n}\r\n// ____________________________________________________________________________\r\n//\r\nfunction* onReadingNFC(store: Store<State>) {\r\n  yield takeLatest(NFCActionTypes.START_NFC_READ_LISTEN, readingNFC, store)\r\n}\r\nfunction* onChangeFetchedMessage() {\r\n  yield takeLatest(\r\n    NFCActionTypes.SET_FETCHED_MESSAGE,\r\n    appendFetchedMessageToShares\r\n  )\r\n}\r\n// ____________________________________________________________________________\r\n//\r\nexport default function* (store: Store<State>) {\r\n  yield all([call(onReadingNFC, store), call(onChangeFetchedMessage)])\r\n}\r\n","import { getRandomIntList } from './utils'\r\nimport { encodeToNumArr, decodeFromNumArr } from '../convertor'\r\nimport { q } from './config'\r\n\r\nimport type { MessageForm } from '../../types/form'\r\nimport type { Share } from '../../types/store'\r\n// ____________________________________________________________________________\r\n//\r\nexport const sharing = ({ message, n, t }: MessageForm): Share[] => {\r\n  if (n < t) throw Error('n must be greater than or equal t')\r\n  if (t <= 1) throw Error('t must be greater than 1')\r\n\r\n  const msgEncoded = encodeToNumArr(message)\r\n  const sharingId = String(Date.now()).slice(-6)\r\n\r\n  const sharesList: number[][] = [...Array(n)].map(() => [])\r\n  msgEncoded.forEach((msg, i) => {\r\n    let f = getRandomIntList(t - 1, q)\r\n    sharesList.forEach((_, j) => {\r\n      let shareY = msg\r\n      const shareX = j + 1\r\n      f.forEach((val, k) => {\r\n        shareY += val * Math.pow(shareX, k + 1)\r\n        shareY %= q\r\n      })\r\n      sharesList[j].push(shareY)\r\n    })\r\n  })\r\n  const sharesY = sharesList.map((s) => decodeFromNumArr(s))\r\n\r\n  const result = sharesY.map(\r\n    (y, i): Share => {\r\n      return {\r\n        sharingId,\r\n        t,\r\n        x: i + 1,\r\n        y,\r\n      }\r\n    }\r\n  )\r\n\r\n  return result\r\n}\r\n","import { all, put, call, takeLatest } from 'redux-saga/effects'\r\n\r\nimport {\r\n  startSharing,\r\n  endSharing,\r\n  setCounter,\r\n  decrementCounter,\r\n  initSharingState,\r\n} from './sharing.actions'\r\nimport { setError } from '../config/config.actions'\r\nimport { writingNDEF } from '../nfc/nfc.sagas'\r\nimport { shareToStr } from '../../logics/convertor'\r\nimport { sharing as SSSSSharing } from '../../logics/SSSS/sharing'\r\n\r\nimport { SharingActionTypes } from './sharing.types'\r\nimport { Share } from '../../types/store'\r\n// ____________________________________________________________________________\r\n//\r\nfunction* sendShares(counter: number, shares: Share[]) {\r\n  while (counter > 0) {\r\n    const shareMsg = shareToStr(shares[counter - 1])\r\n    try {\r\n      yield call(writingNDEF, shareMsg)\r\n      counter--\r\n      yield put(decrementCounter())\r\n    } catch (error) {\r\n      yield put(\r\n        setError('An error occurred while writing shares. Please try again.')\r\n      )\r\n    }\r\n    yield new Promise((resolve) => setTimeout(resolve, 1000))\r\n  }\r\n}\r\nexport function* sharing(action: ReturnType<typeof startSharing>) {\r\n  try {\r\n    const { message, t, n } = action.payload.messageForm\r\n    const shares: Share[] = SSSSSharing({ message, n, t })\r\n    yield put(setCounter(n))\r\n    yield sendShares(n, shares)\r\n    yield put(endSharing())\r\n  } catch (error) {\r\n    yield put(\r\n      setError(\r\n        'An error occurred while sharing. Please start again from the beginning.'\r\n      )\r\n    )\r\n    yield put(initSharingState())\r\n  }\r\n}\r\n// ____________________________________________________________________________\r\n//\r\nexport function* onSharingStart() {\r\n  yield takeLatest(SharingActionTypes.START_SHARING, sharing)\r\n}\r\n// ____________________________________________________________________________\r\n//\r\nexport default function* () {\r\n  yield all([call(onSharingStart)])\r\n}\r\n","import { all, call, put, takeLatest, select } from 'redux-saga/effects'\r\n\r\nimport { appendShareFromText, setShares } from './reconstruction.actions'\r\nimport { setError } from '../config/config.actions'\r\n\r\nimport { State } from '../rootReducer'\r\n\r\nimport { strToShare } from '../../logics/convertor'\r\n\r\nimport { Share } from 'types/store'\r\nimport { ReconstructionActionTypes } from './reconstruction.types'\r\n// ____________________________________________________________________________\r\n//\r\nfunction* appendingShareFromText(\r\n  action: ReturnType<typeof appendShareFromText>\r\n) {\r\n  const {\r\n    reconstruction: { isReady, shares },\r\n  }: State = yield select()\r\n  if (!isReady) return\r\n\r\n  const { text } = action.payload\r\n  let share: Share\r\n  try {\r\n    share = strToShare(text)\r\n  } catch (error) {\r\n    yield put(setError('The format of the data is different.'))\r\n    return\r\n  }\r\n\r\n  if (shares.length !== 0) {\r\n    if (shares[0].sharingId !== share.sharingId) {\r\n      yield put(setError('This is a share of another data.'))\r\n      return\r\n    }\r\n    if (shares.find((s) => s.x === share.x)) {\r\n      yield put(\r\n        setError('Duplicate loads or the same share has already been loaded.')\r\n      )\r\n      return\r\n    }\r\n  }\r\n\r\n  const newShares = [...shares, share]\r\n  yield put(setShares(newShares))\r\n}\r\n// ____________________________________________________________________________\r\n//\r\nexport function* onAppendShare() {\r\n  yield takeLatest(\r\n    ReconstructionActionTypes.APPEND_SHARE_FROM_TEXT,\r\n    appendingShareFromText\r\n  )\r\n}\r\n// ____________________________________________________________________________\r\n//\r\nexport default function* () {\r\n  yield all([call(onAppendShare)])\r\n}\r\n","import { all, call } from 'redux-saga/effects'\r\n\r\nimport sharingSagas from './sharing/sharing.sagas'\r\nimport nfcSagas from './nfc/nfc.sagas'\r\nimport reconstructionSagas from './reconstruction/reconstruction.sagas'\r\n\r\nimport { store } from './'\r\n// ____________________________________________________________________________\r\n//\r\nexport function* rootSaga() {\r\n  yield all([\r\n    call(sharingSagas),\r\n    call(nfcSagas, store),\r\n    call(reconstructionSagas),\r\n  ])\r\n}\r\n","import Redux, { createStore, applyMiddleware } from 'redux'\r\nimport logger from 'redux-logger'\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport { rootReducer } from './rootReducer'\r\nimport { rootSaga } from './rootSaga'\r\n\r\nimport { NFCActions } from './nfc/nfc.reducer'\r\nimport { ConfigActions } from './config/config.reducer'\r\nimport { SharingActions } from './sharing/sharing.reducer'\r\nimport { ReconstructionActions } from './reconstruction/reconstruction.reducer'\r\n// ____________________________________________________________________________\r\n//\r\nexport type Actions =\r\n  | ConfigActions\r\n  | NFCActions\r\n  | SharingActions\r\n  | ReconstructionActions\r\n// ____________________________________________________________________________\r\n//\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst middlewares: Redux.Middleware[] = [sagaMiddleware]\r\nif (process.env.NODE_ENV === 'development') {\r\n  middlewares.push(logger)\r\n}\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares))\r\n\r\nsagaMiddleware.run(rootSaga)\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { initNDEF, startNFCReadListen } from '../../../store/nfc/nfc.actions'\r\n\r\nimport styles from './NFCGate.module.scss'\r\n// ____________________________________________________________________________\r\n//\r\nexport const NFCGate: React.FC = ({ children }) => {\r\n  const enabled = useSelector((state) => state.nfc.enabled)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (enabled) {\r\n      dispatch(initNDEF())\r\n      dispatch(startNFCReadListen())\r\n    }\r\n  }, [enabled, dispatch])\r\n  return <>{enabled ? children : <NFCDenied />}</>\r\n}\r\n\r\nconst NFCDenied: React.FC = () => (\r\n  <div className={styles.denied}>\r\n    <h1>NFC Did Not Supported</h1>\r\n    <div>\r\n      <h2>How to set WebNFC enabled</h2>\r\n      <p>\r\n        If you're using Google Chrome, go to{' '}\r\n        <a href=\"chrome://flags/#enable-webnfc\">\r\n          chrome://flags/#enable-webnfc\r\n        </a>{' '}\r\n        and enable it.\r\n      </p>\r\n      <p>\r\n        If that still doesn't work, either restart this browser or check your\r\n        phone's NFC settings.\r\n      </p>\r\n    </div>\r\n  </div>\r\n)\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport { pages } from './components/pages'\r\nimport { store } from './store'\r\n\r\nimport { NFCGate } from './components/organisms/NFCGate/NFCGate.component'\r\n// ____________________________________________________________________________\r\n//\r\nexport const App: React.FC = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <NFCGate>\r\n        <HashRouter>\r\n          <Switch>\r\n            {pages.map((page) => (\r\n              <Route\r\n                exact\r\n                key={`PAGE-${page.name}`}\r\n                path={page.path}\r\n                component={page.component}\r\n              />\r\n            ))}\r\n          </Switch>\r\n        </HashRouter>\r\n      </NFCGate>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./index.css\"\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}